#HR.confint.upper <- x$conf.int[12]
#p.value<- x$coef[15]
#six covariates
#beta<- x$coef[7]
#HR <- x$coef[14]
#wald.test<-x$coef[28]
#HR.confint.lower <- x$conf.int[21]
#HR.confint.upper <- x$conf.int[28]
#p.value<- x$coef[35]
#HR.confint.lower <- x$conf.int["lower .95"]
#HR.confint.upper <- x$conf.int["upper .95"]
#HR <- paste0(HR, " (", HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR,HR.confint.lower,HR.confint.upper, wald.test, p.value)
names(res)<-c("beta", "HR", "95% Lower CI for HR", "95% Upper CI for HR", "Z","p.value")
return(res)
})
univ_results_ASL <- lapply(univ_models_ASL,
function(x){
x <- summary(x)
#univ
#beta<- x$coef[1]
#HR <- x$coef[2]
#HR.confint.lower <- x$conf.int[3]
#HR.confint.upper <- x$conf.int[4]
#wald.test<- x$coef[4]
#p.value<- x$coef[5]
#two covariates
#beta<- x$coef[3]
#HR <- x$coef[6]
#wald.test<-x$coef[12]
#HR.confint.lower <- x$conf.int[9]
#HR.confint.upper <- x$conf.int[12]
#p.value<- x$coef[15]
#six covariates
beta<- x$coef[7]
HR <- x$coef[14]
wald.test<-x$coef[28]
HR.confint.lower <- x$conf.int[21]
HR.confint.upper <- x$conf.int[28]
p.value<- x$coef[35]
#HR.confint.lower <- x$conf.int["lower .95"]
#HR.confint.upper <- x$conf.int["upper .95"]
#HR <- paste0(HR, " (", HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR,HR.confint.lower,HR.confint.upper, wald.test, p.value)
names(res)<-c("beta", "HR", "95% Lower CI for HR", "95% Upper CI for HR", "Z","p.value")
return(res)
})
View(univ_models_ASL)
View(univ_results_ASL)
View(univ_models_AS)
View(univ_models)
View(univ_models_AS)
View(univ_results_AS)
univ_results_AS <- lapply(univ_models_AS,
function(x){
x <- summary(x)
#two covariates
beta<- x$coef[3]
HR <- x$coef[6]
wald.test<-x$coef[12]
HR.confint.lower <- x$conf.int[9]
HR.confint.upper <- x$conf.int[12]
p.value<- x$coef[15]
#univ
#beta<- x$coef[1]
#HR <- x$coef[2]
#HR.confint.lower <- x$conf.int[3]
#HR.confint.upper <- x$conf.int[4]
#wald.test<- x$coef[4]
#p.value<- x$coef[5]
#six covariates
#beta<- x$coef[7]
#HR <- x$coef[14]
#wald.test<-x$coef[28]
#HR.confint.lower <- x$conf.int[21]
#HR.confint.upper <- x$conf.int[28]
#p.value<- x$coef[35]
#HR.confint.lower <- x$conf.int["lower .95"]
#HR.confint.upper <- x$conf.int["upper .95"]
#HR <- paste0(HR, " (", HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR,HR.confint.lower,HR.confint.upper, wald.test, p.value)
names(res)<-c("beta", "HR", "95% Lower CI for HR", "95% Upper CI for HR", "Z","p.value")
return(res)
})
View(univ_results_AS)
View(univ_results_AS)
univ_results_AS <- lapply(univ_models_AS,
function(x){
x <- summary(x)
#two covariates
beta<- x$coef[3]
HR <- x$coef[6]
wald.test<-x$coef[12]
HR.confint.lower <- x$conf.int[9]
HR.confint.upper <- x$conf.int[12]
p.value<- x$coef[15]
#univ
#beta<- x$coef[1]
#HR <- x$coef[2]
#HR.confint.lower <- x$conf.int[3]
#HR.confint.upper <- x$conf.int[4]
#wald.test<- x$coef[4]
#p.value<- x$coef[5]
#six covariates
#beta<- x$coef[7]
#HR <- x$coef[14]
#wald.test<-x$coef[28]
#HR.confint.lower <- x$conf.int[21]
#HR.confint.upper <- x$conf.int[28]
#p.value<- x$coef[35]
#HR.confint.lower <- x$conf.int["lower .95"]
#HR.confint.upper <- x$conf.int["upper .95"]
#HR <- paste0(HR, " (", HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR,HR.confint.lower,HR.confint.upper, wald.test, p.value)
names(res)<-c("beta", "HR", "95% Lower CI for HR", "95% Upper CI for HR", "Z","p.value")
return(res)
})
View(univ_models_AS)
univ_results_AS <- lapply(univ_models_AS,
function(x){
x <- summary(x)
#two covariates
beta<- x$coef[3]
HR <- x$coef[6]
wald.test<-x$coef[12]
HR.confint.lower <- x$conf.int[9]
HR.confint.upper <- x$conf.int[12]
p.value<- x$coef[15]
#univ
beta<- x$coef[1]
HR <- x$coef[2]
HR.confint.lower <- x$conf.int[3]
HR.confint.upper <- x$conf.int[4]
wald.test<- x$coef[4]
p.value<- x$coef[5]
#six covariates
#beta<- x$coef[7]
#HR <- x$coef[14]
#wald.test<-x$coef[28]
#HR.confint.lower <- x$conf.int[21]
#HR.confint.upper <- x$conf.int[28]
#p.value<- x$coef[35]
#HR.confint.lower <- x$conf.int["lower .95"]
#HR.confint.upper <- x$conf.int["upper .95"]
#HR <- paste0(HR, " (", HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR,HR.confint.lower,HR.confint.upper, wald.test, p.value)
names(res)<-c("beta", "HR", "95% Lower CI for HR", "95% Upper CI for HR", "Z","p.value")
return(res)
})
View(univ_results_AS)
univ_results_AS <- lapply(univ_models_AS,
function(x){
x <- summary(x)
#two covariates
beta<- x$coef[3]
HR <- x$coef[6]
wald.test<-x$coef[12]
HR.confint.lower <- x$conf.int[9]
HR.confint.upper <- x$conf.int[12]
p.value<- x$coef[15]
#univ
#beta<- x$coef[1]
#HR <- x$coef[2]
#HR.confint.lower <- x$conf.int[3]
#HR.confint.upper <- x$conf.int[4]
#wald.test<- x$coef[4]
#p.value<- x$coef[5]
#six covariates
#beta<- x$coef[7]
#HR <- x$coef[14]
#wald.test<-x$coef[28]
#HR.confint.lower <- x$conf.int[21]
#HR.confint.upper <- x$conf.int[28]
#p.value<- x$coef[35]
#HR.confint.lower <- x$conf.int["lower .95"]
#HR.confint.upper <- x$conf.int["upper .95"]
#HR <- paste0(HR, " (", HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR,HR.confint.lower,HR.confint.upper, wald.test, p.value)
names(res)<-c("beta", "HR", "95% Lower CI for HR", "95% Upper CI for HR", "Z","p.value")
return(res)
})
View(univ_results_AS)
View(univ_results_AS)
View(univ_models_ASL)
View(univ_results_ASL)
View(univ_results_AS)
View(univ_models)
View(univ_models_ASL)
univ_results_AS <- lapply(univ_models_AS,
function(x){
x <- summary(x)
#two covariates
beta<- x$coef[3]
HR <- x$coef[6]
wald.test<-x$coef[12]
HR.confint.lower <- x$conf.int[9]
HR.confint.upper <- x$conf.int[12]
p.value<- x$coef[15]
#univ
#beta<- x$coef[1]
#HR <- x$coef[2]
#HR.confint.lower <- x$conf.int[3]
#HR.confint.upper <- x$conf.int[4]
#wald.test<- x$coef[4]
#p.value<- x$coef[5]
#six covariates
#beta<- x$coef[7]
#HR <- x$coef[14]
#wald.test<-x$coef[28]
#HR.confint.lower <- x$conf.int[21]
#HR.confint.upper <- x$conf.int[28]
#p.value<- x$coef[35]
#HR.confint.lower <- x$conf.int["lower .95"]
#HR.confint.upper <- x$conf.int["upper .95"]
#HR <- paste0(HR, " (", HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR,HR.confint.lower,HR.confint.upper, wald.test, p.value)
names(res)<-c("beta", "HR", "95% Lower CI for HR", "95% Upper CI for HR", "Z","p.value")
return(res)
})
View(univ_models)
View(univ_results)
univ_results_AS <- lapply(univ_models_AS,
function(x){
x <- summary(x)
#two covariates
beta<- x$coef[3]
HR <- x$coef[6]
wald.test<-x$coef[12]
HR.confint.lower <- x$conf.int[9]
HR.confint.upper <- x$conf.int[12]
p.value<- x$coef[15]
#univ
#beta<- x$coef[1]
#HR <- x$coef[2]
#HR.confint.lower <- x$conf.int[3]
#HR.confint.upper <- x$conf.int[4]
#wald.test<- x$coef[4]
#p.value<- x$coef[5]
#six covariates
#beta<- x$coef[7]
#HR <- x$coef[14]
#wald.test<-x$coef[28]
#HR.confint.lower <- x$conf.int[21]
#HR.confint.upper <- x$conf.int[28]
#p.value<- x$coef[35]
#HR.confint.lower <- x$conf.int["lower .95"]
#HR.confint.upper <- x$conf.int["upper .95"]
#HR <- paste0(HR, " (", HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR,HR.confint.lower,HR.confint.upper, wald.test, p.value)
names(res)<-c("beta", "HR", "95% Lower CI for HR", "95% Upper CI for HR", "Z","p.value")
return(res)
})
univ_results_ASL <- lapply(univ_models_ASL,
function(x){
x <- summary(x)
#univ
#beta<- x$coef[1]
#HR <- x$coef[2]
#HR.confint.lower <- x$conf.int[3]
#HR.confint.upper <- x$conf.int[4]
#wald.test<- x$coef[4]
#p.value<- x$coef[5]
#two covariates
#beta<- x$coef[3]
#HR <- x$coef[6]
#wald.test<-x$coef[12]
#HR.confint.lower <- x$conf.int[9]
#HR.confint.upper <- x$conf.int[12]
#p.value<- x$coef[15]
#six covariates
beta<- x$coef[7]
HR <- x$coef[14]
wald.test<-x$coef[28]
HR.confint.lower <- x$conf.int[21]
HR.confint.upper <- x$conf.int[28]
p.value<- x$coef[35]
#HR.confint.lower <- x$conf.int["lower .95"]
#HR.confint.upper <- x$conf.int["upper .95"]
#HR <- paste0(HR, " (", HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR,HR.confint.lower,HR.confint.upper, wald.test, p.value)
names(res)<-c("beta", "HR", "95% Lower CI for HR", "95% Upper CI for HR", "Z","p.value")
return(res)
})
res_AS <- t(as.data.frame(univ_results_AS, check.names = FALSE))
save.df_AS <-as.data.frame(res)
write.csv(save.df_AS, file = "Cox_HRFeatures_AgeSex.csv")
res_AS <- t(as.data.frame(univ_results_AS, check.names = FALSE))
save.df_AS <-as.data.frame(res_AS)
write.csv(save.df_AS, file = "Cox_HRFeatures_AgeSex.csv")
res_ASL <- t(as.data.frame(univ_results_ASL, check.names = FALSE))
save.df_ASL <-as.data.frame(res_ASL)
write.csv(save.df_ASL, file = "Cox_HRFeatures_AgeSexLipids.csv")
# hazard ratio plot
library(forestplot)
library("survival")
univ_results_ASL <- lapply(univ_models_ASL,
function(x){
x <- summary(x)
#univ
#beta<- x$coef[1]
#HR <- x$coef[2]
#HR.confint.lower <- x$conf.int[3]
#HR.confint.upper <- x$conf.int[4]
#wald.test<- x$coef[4]
#p.value<- x$coef[5]
#two covariates
#beta<- x$coef[3]
#HR <- x$coef[6]
#wald.test<-x$coef[12]
#HR.confint.lower <- x$conf.int[9]
#HR.confint.upper <- x$conf.int[12]
#p.value<- x$coef[15]
#six covariates
beta<- x$coef[7]
HR <- x$coef[14]
wald.test<-x$coef[28]
HR.confint.lower <- x$conf.int[21]
HR.confint.upper <- x$conf.int[28]
p.value<- x$coef[35]
#HR.confint.lower <- x$conf.int["lower .95"]
#HR.confint.upper <- x$conf.int["upper .95"]
#HR <- paste0(HR, " (", HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR,HR.confint.lower,HR.confint.upper, wald.test, p.value)
names(res)<-c("beta", "HR", "95% Lower CI for HR", "95% Upper CI for HR", "Z","p.value")
return(res)
})
univ_results_AS <- lapply(univ_models_AS,
function(x){
x <- summary(x)
#two covariates
beta<- x$coef[3]
HR <- x$coef[6]
wald.test<-x$coef[12]
HR.confint.lower <- x$conf.int[9]
HR.confint.upper <- x$conf.int[12]
p.value<- x$coef[15]
#univ
#beta<- x$coef[1]
#HR <- x$coef[2]
#HR.confint.lower <- x$conf.int[3]
#HR.confint.upper <- x$conf.int[4]
#wald.test<- x$coef[4]
#p.value<- x$coef[5]
#six covariates
#beta<- x$coef[7]
#HR <- x$coef[14]
#wald.test<-x$coef[28]
#HR.confint.lower <- x$conf.int[21]
#HR.confint.upper <- x$conf.int[28]
#p.value<- x$coef[35]
#HR.confint.lower <- x$conf.int["lower .95"]
#HR.confint.upper <- x$conf.int["upper .95"]
#HR <- paste0(HR, " (", HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR,HR.confint.lower,HR.confint.upper, wald.test, p.value)
names(res)<-c("beta", "HR", "95% Lower CI for HR", "95% Upper CI for HR", "Z","p.value")
return(res)
})
res_AS <- t(as.data.frame(univ_results_AS, check.names = FALSE))
save.df_AS <-as.data.frame(res_AS)
write.csv(save.df_AS, file = "Cox_HRFeatures_AgeSex.csv")
res_ASL <- t(as.data.frame(univ_results_ASL, check.names = FALSE))
save.df_ASL <-as.data.frame(res_ASL)
write.csv(save.df_ASL, file = "Cox_HRFeatures_AgeSexLipids.csv")
######## age sex correction
hrAgeData <- read.csv("Cox_HRFeaturesAS2.csv", header = TRUE)
# forest function needs matrix, so convert to matrix
matrixAgeHR <- structure(list(HR = hrAgeData$HR,
low = hrAgeData$low,
high = hrAgeData$high,
pval = hrAgeData$pval),
.Names = c('HR','low','high','pval'),
row.names = c(NA,-nrow(hrAgeData)),
class = 'data.frame')
jpeg(filename="Cox_HRPlot_AgeSex.jpg",units="cm",width=15,height=20, res=800)
boxcol <- ifelse(matrixAgeHR$pval>0.05, "royalblue",ifelse(matrixAgeHR$pval>0.001,"darkgreen","darkred") )
linecol <- ifelse(matrixAgeHR$pval>0.05, "darkblue", ifelse(matrixAgeHR$pval>0.001,"darkgreen","darkred"))
fn <- local({
i = 0
b_clrs = boxcol
l_clrs = linecol
function(..., clr.line, clr.marker){
i <<- i + 1
fpDrawNormalCI(..., clr.line = l_clrs[i], clr.marker = b_clrs[i])
}
})
forestplot(colnames(hrLabels), fn.ci_norm = fn,
matrixAgeHR$HR,
matrixAgeHR$low,
matrixAgeHR$high,
graph.pos = 2, # graph.pos = 1 places the proteins to left side
zero = 1.0,
boxsize=(matrixAgeHR$HR/20), # shows the box size based on HR, log(HR) makes some box very tiny hence invisible
col = fpColors(zero="black"),
ci.vertices = TRUE,
ci.vertices.height = 0.1,
lineheight = "auto",
xlab = "Hazard Ratio",
title = "Hazard Ratio (Corrected for Age & Sex)")
dev.off()
######## lipids correction
hrLipidsData <- read.csv("Cox_HRFeaturesASL2.csv", header = TRUE)
# forest function needs matrix, so convert to matrix
matrixLipHR <- structure(list(HR = hrLipidsData$HR,
low = hrLipidsData$low,
high = hrLipidsData$high,
pval = hrLipidsData$pval),
.Names = c('HR','low','high','pval'),
row.names = c(NA,-nrow(hrLipidsData)),
class = 'data.frame')
jpeg(filename="Cox_HRPlot_AgeSexLipids.jpg",units="cm",width=15,height=20, res=800)
boxcol <- ifelse(matrixLipHR$pval>0.05, "royalblue",ifelse(matrixLipHR$pval>0.001,"darkgreen","darkred") )
linecol <- ifelse(matrixLipHR$pval>0.05, "darkblue", ifelse(matrixLipHR$pval>0.001,"darkgreen","darkred"))
fn <- local({
i = 0
b_clrs = boxcol
l_clrs = linecol
function(..., clr.line, clr.marker){
i <<- i + 1
fpDrawNormalCI(..., clr.line = l_clrs[i], clr.marker = b_clrs[i])
}
})
forestplot(colnames(hrLabels), fn.ci_norm = fn,
matrixLipHR$HR,
matrixLipHR$low,
matrixLipHR$high,
graph.pos = 2, # graph.pos = 1 places the proteins to left side
zero = 1.0,
boxsize=(matrixLipHR$HR/20), # shows the box size based on HR, log(HR) makes some box very tiny hence invisible
col = fpColors(zero="black"),
ci.vertices = TRUE,
ci.vertices.height = 0.1,
lineheight = "auto",
xlab = "Hazard Ratio",
title = "Hazard Ratio (Corrected for Age, Sex & Lipids)")
dev.off()
View(matrixLipHR)
View(matrixAgeHR)
View(matrixHR)
View(matrixHR)
View(matrixHR)
######## age sex correction
hrAgeData <- read.csv("Cox_HRFeaturesAS2.csv", header = TRUE)
# forest function needs matrix, so convert to matrix
matrixAgeHR <- structure(list(HR = hrAgeData$HR,
low = hrAgeData$low,
high = hrAgeData$high,
pval = hrAgeData$pval),
.Names = c('HR','low','high','pval'),
row.names = c(NA,-nrow(hrAgeData)),
class = 'data.frame')
jpeg(filename="Cox_HRPlot_AgeSex.jpg",units="cm",width=15,height=20, res=800)
boxcol <- ifelse(matrixAgeHR$pval>0.05, "royalblue",ifelse(matrixAgeHR$pval>0.001,"darkgreen","darkred") )
linecol <- ifelse(matrixAgeHR$pval>0.05, "darkblue", ifelse(matrixAgeHR$pval>0.001,"darkgreen","darkred"))
fn <- local({
i = 0
b_clrs = boxcol
l_clrs = linecol
function(..., clr.line, clr.marker){
i <<- i + 1
fpDrawNormalCI(..., clr.line = l_clrs[i], clr.marker = b_clrs[i])
}
})
forestplot(colnames(hrLabels), fn.ci_norm = fn,
matrixAgeHR$HR,
matrixAgeHR$low,
matrixAgeHR$high,
graph.pos = 2, # graph.pos = 1 places the proteins to left side
zero = 1.0,
boxsize=(matrixAgeHR$HR/20), # shows the box size based on HR, log(HR) makes some box very tiny hence invisible
col = fpColors(zero="black"),
ci.vertices = TRUE,
ci.vertices.height = 0.1,
lineheight = "auto",
xlab = "Hazard Ratio",
title = "Hazard Ratio (Corrected for Age & Sex)")
dev.off()
######## lipids correction
hrLipidsData <- read.csv("Cox_HRFeaturesASL2.csv", header = TRUE)
# forest function needs matrix, so convert to matrix
matrixLipHR <- structure(list(HR = hrLipidsData$HR,
low = hrLipidsData$low,
high = hrLipidsData$high,
pval = hrLipidsData$pval),
.Names = c('HR','low','high','pval'),
row.names = c(NA,-nrow(hrLipidsData)),
class = 'data.frame')
jpeg(filename="Cox_HRPlot_AgeSexLipids.jpg",units="cm",width=15,height=20, res=800)
boxcol <- ifelse(matrixLipHR$pval>0.05, "royalblue",ifelse(matrixLipHR$pval>0.001,"darkgreen","darkred") )
linecol <- ifelse(matrixLipHR$pval>0.05, "darkblue", ifelse(matrixLipHR$pval>0.001,"darkgreen","darkred"))
fn <- local({
i = 0
b_clrs = boxcol
l_clrs = linecol
function(..., clr.line, clr.marker){
i <<- i + 1
fpDrawNormalCI(..., clr.line = l_clrs[i], clr.marker = b_clrs[i])
}
})
forestplot(colnames(hrLabels), fn.ci_norm = fn,
matrixLipHR$HR,
matrixLipHR$low,
matrixLipHR$high,
graph.pos = 2, # graph.pos = 1 places the proteins to left side
zero = 1.0,
boxsize=(matrixLipHR$HR/20), # shows the box size based on HR, log(HR) makes some box very tiny hence invisible
col = fpColors(zero="black"),
ci.vertices = TRUE,
ci.vertices.height = 0.1,
lineheight = "auto",
xlab = "Hazard Ratio",
title = "Hazard Ratio (Corrected for Age, Sex & Lipids)")
dev.off()
