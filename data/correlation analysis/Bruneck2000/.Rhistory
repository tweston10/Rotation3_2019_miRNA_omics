"PRL",
"MPO",
"GH1",
"MMP1",
"RETN",
"FASN",
"PAPPA",
"PTX3",
"REN",
"CHI3L1",
"IL1RL1",
"TIMELESS",
"NGF",
"XPNPEP2",
"TNFSF11",
"HGF",
"SELPLG",
"MB",
"THBD",
"IL16",
"MMP10",
"PRAP1",
"CCL4",
"CTSD",
"AGER",
"CCL3",
"MMP7",
"CXCL6",
"ITGB1BP2",
"CXCL16",
"DKK1",
"SIRT2",
"GAL",
"AGRP",
"S100A12",
"CD40",
"PLAT",
"HBEGF",
"ESM1",
"IL4",
"VEGFD",
"MMP12",
"SPON1",
"CASP8",
"CTSL",
"CX3CL1",
"FABP4",
"NPPB",
"LEP",
"CCL20",
"MUC16",
"IKBKG",
"FST",
"PECAM1",
"NT-pro-BNP",
"RNASE3",
"BDNF",
"CCL7",
"GDNF",
"CDCP1",
"CD244",
"IL7",
"TGFB1",
"PLAUR",
"IL17C",
"IL17A",
"CXCL11",
"AXIN1",
"TNFSF10",
"IL20RA",
"CXCL9",
"CST5",
"IL2RB",
"IL1A",
"OSM",
"IL2",
"TSLP",
"CCL4L1",
"CD6",
"SLAMF1",
"TGFA",
"CCL13",
"CCL11",
"IL10RA",
"FGF5",
"LIFR",
"FGF21",
"CCL19",
"IL15RA",
"IL10RB",
"IL22RA1",
"PDGFB",
"CXCL5",
"IL12B",
"IL24",
"IL13",
"ARTN",
"IL10",
"TNF",
"CCL23",
"CD5",
"FLT3LG",
"CXCL10",
"EIF4EBP1",
"IL20",
"CCL28",
"DNER",
"IL33",
"IFNG",
"FGF19",
"LIF",
"NRTN",
"CCL8",
"CCL25",
"TNFRSF9",
"NTF3",
"TNFSF12",
"SULT1A1",
"STAMBP",
"IL5",
"ADA",
"LTA",
"miR-122",
"miR-126",
"miR-150",
"miR-155",
"miR-191",
"miR-195",
"miR-197",
"miR-21",
"miR-223",
"miR-24",
"miR-28-3p",
"U6",
"miR-27b",
"miR-92a",
"miR-146a",
"miR-148a",
"miR-320",
"miR-335",
"miR-126*",
"miR-223*",
"miR-378"
)
rownames(RawData) <- std.gene.names
t_Rawdata <- t(RawData)
RawData2[1,1] <- ''
write.table(RawData2, file = "GeneData.txt", sep = "\t",
row.names = FALSE, col.names = TRUE)
miR_F <- grep("^miR*|^let*",std.gene.names, value = TRUE)
proteins_F <- grep("^miR*|^let*",std.gene.names, value = TRUE, invert = TRUE)
rows_to_remove2 <- which(row.names(RawData) %in% miR.F)
rows_to_remove2 <- which(row.names(RawData) %in% miR_F)
Protein_Data <- RawData[-rows_to_remove2,]
Protein_Data <- Protein_Data %>% rownames_to_column(' ') %>%
t() %>%
as.data.frame() %>%
rownames_to_column(' ') %>%
t()
Protein_Data[1,1] <- ''
View(Protein_Data)
View(Protein_Data)
write.table(RawData2, file = "GeneData.txt", sep = "\t",
row.names = FALSE, col.names = FALSE)
write.table(Protein_Data, file = "Protein_Data.txt", sep = "\t",
row.names = FALSE, col.names = FALSE)
write(as.character(miR_F), file = "miRNAs.txt", sep = "\n")
write(as.character(proteins_F), file = "proteins.txt", sep = "\n")
View(Cox_data)
library(data.table)
library(dplyr)
library(readxl)
library(tidyverse)
miRNA_list <- list('hsa-miR-122-3p',
'hsa-miR-122-5p',
'hsa-miR-126-3p',
'hsa-miR-126-3p',
'hsa-miR-126-5p',
'hsa-miR-126-5p',
'hsa-miR-146a-3p',
'hsa-miR-146a-5p',
'hsa-miR-148a-3p',
'hsa-miR-148a-5p',
'hsa-miR-150-3p',
'hsa-miR-150-5p',
'hsa-miR-155-3p',
'hsa-miR-155-5p',
'hsa-miR-191-3p',
'hsa-miR-191-5p',
'hsa-miR-195-3p',
'hsa-miR-195-5p',
'hsa-miR-197-3p',
'hsa-miR-197-5p',
'hsa-miR-21-3p',
'hsa-miR-21-5p',
'hsa-miR-223-3p',
'hsa-miR-223-3p',
'hsa-miR-223-5p',
'hsa-miR-223-5p',
'hsa-miR-24-3p',
'hsa-miR-24-5p',
'hsa-miR-27b-3p',
'hsa-miR-27b-5p',
'hsa-miR-28-3p',
'hsa-miR-320-3p',
'hsa-miR-320-5p',
'hsa-miR-335-3p',
'hsa-miR-335-5p',
'hsa-miR-378-3p',
'hsa-miR-378-5p',
'hsa-miR-92a-3p',
'hsa-miR-92a-5p',
)
miRNA_list <- list('hsa-miR-122-3p',
'hsa-miR-122-5p',
'hsa-miR-126-3p',
'hsa-miR-126-3p',
'hsa-miR-126-5p',
'hsa-miR-126-5p',
'hsa-miR-146a-3p',
'hsa-miR-146a-5p',
'hsa-miR-148a-3p',
'hsa-miR-148a-5p',
'hsa-miR-150-3p',
'hsa-miR-150-5p',
'hsa-miR-155-3p',
'hsa-miR-155-5p',
'hsa-miR-191-3p',
'hsa-miR-191-5p',
'hsa-miR-195-3p',
'hsa-miR-195-5p',
'hsa-miR-197-3p',
'hsa-miR-197-5p',
'hsa-miR-21-3p',
'hsa-miR-21-5p',
'hsa-miR-223-3p',
'hsa-miR-223-3p',
'hsa-miR-223-5p',
'hsa-miR-223-5p',
'hsa-miR-24-3p',
'hsa-miR-24-5p',
'hsa-miR-27b-3p',
'hsa-miR-27b-5p',
'hsa-miR-28-3p',
'hsa-miR-320-3p',
'hsa-miR-320-5p',
'hsa-miR-335-3p',
'hsa-miR-335-5p',
'hsa-miR-378-3p',
'hsa-miR-378-5p',
'hsa-miR-92a-3p',
'hsa-miR-92a-5p'
)
miRWalk.list <- list.files(pattern = 'miRWalk*')
TarPred <- read_csv("miRNA data/Consolidated_Data_FLAG.csv")
TarPred <- TarPred[,-1]
TarPred$miRNA <- gsub('hsa-', '', TarPred$miRNA)
miRNA_list.A <- c('miR-122-5p',
'miR-126-5p',
'miR-150-5p',
'miR-155-5p',
'miR-191-5p',
'miR-195-5p',
'miR-197-5p',
'miR-21-5p',
'miR-223-5p',
'miR-24-5p',
'miR-28-3p',
'U6',
'miR-27b-5p',
'miR-92a-5p',
'miR-146a-5p',
'miR-148a-5p',
'miR-320-5p',
'miR-335-5p',
'miR-378-5p'
)
miRNA_list.B <- c('miR-122-3p',
'miR-126-3p',
'miR-150-3p',
'miR-155-3p',
'miR-191-3p',
'miR-195-3p',
'miR-197-3p',
'miR-21-3p',
'miR-223-3p',
'miR-24-3p',
'miR-27b-3p',
'miR-92a-3p',
'miR-146a-3p',
'miR-148a-3p',
'miR-320-3p',
'miR-335-3p',
'miR-378-3p'
)
Unweight.data <- cbind(t_Rawdata, t_Rawdata[,254:274])
Unweight.data <- Unweight.data[,c(-271, -272, -285, -286, -293, -294)]
View(head(Unweight.data))
colnames(Unweight.data)[254:272] <- miRNA_list.A
colnames(Unweight.data)[273:289] <- miRNA_list.B
adj.unweight <- adjacency(Unweight.data,type = "unsigned", power = softPower, corFnc = "cor", corOptions ="use = 'p', method = 'spearman'")
Corr.unweight <- cor(Unweight.data, method = "spearman", use = "pairwise.complete.obs")
adj.weight <- data.frame(matrix(nrow=289,ncol=289))
row.names(adj.weight) = row.names(adj.unweight)
colnames(adj.weight) = colnames(adj.unweight)
library(tidyverse)
library(corrplot)
library(WGCNA)
library(readxl)
library(data.table)
library(flashClust)
TarPred <- read_csv("miRNA data/Consolidated_Data_FLAG.csv")
TarPred <- TarPred[,-1]
TarPred$miRNA <- gsub('hsa-', '', TarPred$miRNA)
miRNA_list.A <- c('miR-122-5p',
'miR-126-5p',
'miR-150-5p',
'miR-155-5p',
'miR-191-5p',
'miR-195-5p',
'miR-197-5p',
'miR-21-5p',
'miR-223-5p',
'miR-24-5p',
'miR-28-3p',
'U6',
'miR-27b-5p',
'miR-92a-5p',
'miR-146a-5p',
'miR-148a-5p',
'miR-320-5p',
'miR-335-5p',
'miR-378-5p'
)
miRNA_list.B <- c('miR-122-3p',
'miR-126-3p',
'miR-150-3p',
'miR-155-3p',
'miR-191-3p',
'miR-195-3p',
'miR-197-3p',
'miR-21-3p',
'miR-223-3p',
'miR-24-3p',
'miR-27b-3p',
'miR-92a-3p',
'miR-146a-3p',
'miR-148a-3p',
'miR-320-3p',
'miR-335-3p',
'miR-378-3p'
)
Unweight.data <- cbind(t_Rawdata, t_Rawdata[,254:274])
Unweight.data <- Unweight.data[,c(-271, -272, -285, -286, -293, -294)]
View(head(Unweight.data))
colnames(Unweight.data)[254:272] <- miRNA_list.A
colnames(Unweight.data)[273:289] <- miRNA_list.B
adj.unweight <- adjacency(Unweight.data,type = "unsigned", power = softPower, corFnc = "cor", corOptions ="use = 'p', method = 'spearman'")
Corr.unweight <- cor(Unweight.data, method = "spearman", use = "pairwise.complete.obs")
adj.weight <- data.frame(matrix(nrow=289,ncol=289))
row.names(adj.weight) = row.names(adj.unweight)
colnames(adj.weight) = colnames(adj.unweight)
for(i in 1:dim(adj.unweight)[1]) {
for(j in 1:dim(adj.unweight)[2]){
row = rownames(adj.weight)[i]
col = colnames(adj.weight)[j]
count = as.integer(TarPred %>% filter(miRNA==row,Gene==col) %>% select('No. Sources'))
count2 = as.integer(TarPred %>% filter(miRNA==col,Gene==row) %>% select('No. Sources'))
if(grepl("^miR*|^let*",row) && grepl("^miR*|^let*",col)) {
adj.weight[i,j] = adj.unweight[i,j]
} else if(!grepl("^miR*|^let*",row) && !grepl("^miR*|^let*",col)) {
adj.weight[i,j] = adj.unweight[i,j]
} else if(grepl("^miR*|^let*",row) && !grepl("^miR*|^let*",col)) {
if(is.na(count) || count == '') {
adj.weight[i,j] = 0
} else if(count >= 2) {
adj.weight[i,j] = adj.unweight[i,j]*1
} else if(count == 1) {
adj.weight[i,j] = adj.unweight[i,j]*0.75
} else {
adj.weight[i,j] = 0
}
} else if(!grepl("^miR*|^let*",row) && grepl("^miR*|^let*",col)) {
if(is.na(count2) || count2 == '') {
adj.weight[i,j] = 0
} else if(count2 >= 2) {
adj.weight[i,j] = adj.unweight[i,j]*1
} else if(count2 == 1) {
adj.weight[i,j] = adj.unweight[i,j]*0.75
} else {
adj.weight[i,j] = 0
}
}
}
}
save.image("~/King's BRC DTP Work/Rotation 3/data/correlation analysis/Bruneck2000/Session.RData")
if(is.na(count) || count == '') {
Corr.weight[i,j] = 0
} else if(count >= 2) {
Corr.weight[i,j] = Corr.unweight[i,j]*1
} else if(count == 1) {
Corr.weight[i,j] = Corr.unweight[i,j]*0.75
} else {
Corr.weight[i,j] = 0
}
for(i in 1:dim(Corr.unweight)[1]) {
for(j in 1:dim(Corr.unweight)[2]){
row = rownames(Corr.weight)[i]
col = colnames(Corr.weight)[j]
count = as.integer(TarPred %>% filter(miRNA==row,Gene==col) %>% select('No. Sources'))
count2 = as.integer(TarPred %>% filter(miRNA==col,Gene==row) %>% select('No. Sources'))
if(grepl("^miR*|^let*",row) && grepl("^miR*|^let*",col)) {
Corr.weight[i,j] = Corr.unweight[i,j]
} else if(!grepl("^miR*|^let*",row) && !grepl("^miR*|^let*",col)) {
Corr.weight[i,j] = Corr.unweight[i,j]
} else if(grepl("^miR*|^let*",row) && !grepl("^miR*|^let*",col)) {
if(is.na(count) || count == '') {
Corr.weight[i,j] = 0
} else if(count >= 2) {
Corr.weight[i,j] = Corr.unweight[i,j]*1
} else if(count == 1) {
Corr.weight[i,j] = Corr.unweight[i,j]*0.75
} else {
Corr.weight[i,j] = 0
}
} else if(!grepl("^miR*|^let*",row) && grepl("^miR*|^let*",col)) {
if(is.na(count2) || count2 == '') {
Corr.weight[i,j] = 0
} else if(count2 >= 2) {
Corr.weight[i,j] = Corr.unweight[i,j]*1
} else if(count2 == 1) {
Corr.weight[i,j] = Corr.unweight[i,j]*0.75
} else {
Corr.weight[i,j] = 0
}
}
}
}
Corr.weight <- data.frame(matrix(nrow=289,ncol=289))
row.names(Corr.weight) = row.names(Corr.unweight)
colnames(Corr.weight) = colnames(Corr.unweight)
for(i in 1:dim(Corr.unweight)[1]) {
for(j in 1:dim(Corr.unweight)[2]){
row = rownames(Corr.weight)[i]
col = colnames(Corr.weight)[j]
count = as.integer(TarPred %>% filter(miRNA==row,Gene==col) %>% select('No. Sources'))
count2 = as.integer(TarPred %>% filter(miRNA==col,Gene==row) %>% select('No. Sources'))
if(grepl("^miR*|^let*",row) && grepl("^miR*|^let*",col)) {
Corr.weight[i,j] = Corr.unweight[i,j]
} else if(!grepl("^miR*|^let*",row) && !grepl("^miR*|^let*",col)) {
Corr.weight[i,j] = Corr.unweight[i,j]
} else if(grepl("^miR*|^let*",row) && !grepl("^miR*|^let*",col)) {
if(is.na(count) || count == '') {
Corr.weight[i,j] = 0
} else if(count >= 2) {
Corr.weight[i,j] = Corr.unweight[i,j]*1
} else if(count == 1) {
Corr.weight[i,j] = Corr.unweight[i,j]*0.75
} else {
Corr.weight[i,j] = 0
}
} else if(!grepl("^miR*|^let*",row) && grepl("^miR*|^let*",col)) {
if(is.na(count2) || count2 == '') {
Corr.weight[i,j] = 0
} else if(count2 >= 2) {
Corr.weight[i,j] = Corr.unweight[i,j]*1
} else if(count2 == 1) {
Corr.weight[i,j] = Corr.unweight[i,j]*0.75
} else {
Corr.weight[i,j] = 0
}
}
}
}
save.image("~/King's BRC DTP Work/Rotation 3/data/correlation analysis/Bruneck2000/Session.RData")
save.image("~/King's BRC DTP Work/Rotation 3/data/correlation analysis/Bruneck2000/Environment.RData")
sc3 <- specc(numericData, centers=3)
withinss(sc3)
size(sc3)
# loop to extract Cluster membership
y=list()
for (x in c(1:ncol(numericData))){
y <- as.integer(c(y,sc3[x]))
}
calinhara(numericData,y,cn=3)
png(height=600, width=1700, pointsize=15, file="Spectral_RNA_AGI_3.png")
plot(sc3,xaxt = 'n')
axis(side=1,at= seq(sc3),labels=rownames(numericData),las=2)
dev.off()
y
colnames(numericData)
colnames(numericData) <- tmp$gene
y <- tmp$clust
load("~/King's BRC DTP Work/Rotation 3/data/correlation analysis/Bruneck2000/Environment.RData")
sc3 <- specc(numericData, centers=3)
withinss(sc3)
size(sc3)
# loop to extract Cluster membership
y=list()
for (x in c(1:ncol(numericData))){
y <- as.integer(c(y,sc3[x]))
}
y
tmp$gene <- colnames(numericData)
tmp2$gene <- colnames(numericData)
colnames(numericData)
tmp <- matrix(nrow = 274, ncol = 2)
tmp[1] <- colnames(numericData)
tmp[,1] <- colnames(numericData)
tmp[,2] <- y
View(tmp)
View(tmp)
